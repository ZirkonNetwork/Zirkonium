name: Build Zirkonium 1.21.4
on:
  push:
    branches: [ "main" ]
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    env:
      BUILD_NUMBER: ${{ github.run_number }}
      GRAALVM_ARGS: "-Dgraal.CompilerConfiguration=enterprise -Dgraal.UsePriorityInlining=true -Dgraal.Vectorization=true -Dgraal.OptDuplication=true -Dgraal.LoopUnroll=true -Dgraal.SpeculativeGuardMovement=true --add-modules jdk.incubator.vector"
      GRADLE_MEMORY: "-Xmx4g -XX:MaxMetaspaceSize=2g"
      PATCH_PARALLELISM: "16"
    outputs:
      build_number: ${{ env.BUILD_NUMBER }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@main
        with:
          fetch-depth: 0

      - name: Set up GraalVM JDK 21
        uses: graalvm/setup-graalvm@main
        with:
          java-version: 21
          github-token: "${{ secrets.GITHUB_TOKEN }}"

      - name: Grant execute permission for gradlew
        run: chmod +x gradlew

      - name: Configure Git
        run: |
          git config --global user.email "no-reply@github.com"
          git config --global user.name "Github Actions"
          # Speed up git operations
          git config --global core.preloadindex true
          git config --global core.fscache true
          git config --global gc.auto 256

      - name: Configure Gradle Properties
        run: |
          mkdir -p ~/.gradle
          echo "org.gradle.daemon=true" >> ~/.gradle/gradle.properties
          echo "org.gradle.parallel=true" >> ~/.gradle/gradle.properties
          echo "org.gradle.caching=true" >> ~/.gradle/gradle.properties
          echo "org.gradle.jvmargs=${{ env.GRADLE_MEMORY }} -XX:+HeapDumpOnOutOfMemoryError -Dfile.encoding=UTF-8" >> ~/.gradle/gradle.properties
          echo "kotlin.incremental=true" >> ~/.gradle/gradle.properties
          # Add patch parallelism configuration 
          echo "zirkoniumPatches.parallelism=${{ env.PATCH_PARALLELISM }}" >> ~/.gradle/gradle.properties

      - name: Apply patches
        run: |
          # Analyze available system resources for optimal settings
          echo "CPU cores: $(nproc)"
          echo "Memory: $(free -h)"
          
          # Run patch application with optimized settings
          ./gradlew -Dorg.gradle.jvmargs="${{ env.GRAALVM_ARGS }} ${{ env.GRADLE_MEMORY }}" \
                   -Dzirkonium.patcher.parallelism=${{ env.PATCH_PARALLELISM }} \
                   applyAllPatches \
                   --stacktrace --no-daemon --parallel \
                   --max-workers=8

      - name: Create MojmapPaperclipJar
        run: ./gradlew -Dorg.gradle.jvmargs="${{ env.GRAALVM_ARGS }} ${{ env.GRADLE_MEMORY }}" createMojmapPaperclipJar --stacktrace --no-daemon --parallel --max-workers=8

      - name: Create ReobfPaperclipJar
        run: ./gradlew -Dorg.gradle.jvmargs="${{ env.GRAALVM_ARGS }} ${{ env.GRADLE_MEMORY }}" -Dpaperweight.debug=true createReobfPaperclipJar --stacktrace --no-daemon --parallel --max-workers=8

      - name: Gradle Cache Prune
        run: |
          if [ -d ~/.gradle/caches ]; then
            echo "Before pruning:"
            du -sh ~/.gradle/caches || echo "Could not determine cache size"
            find ~/.gradle/caches -name "*.jar" -type f -atime +30 -delete || echo "No old JAR files to delete"
            find ~/.gradle/caches -name "*.pom" -type f -atime +30 -delete || echo "No old POM files to delete"
            echo "After pruning:"
            du -sh ~/.gradle/caches || echo "Could not determine cache size"
          else
            echo "Gradle cache directory does not exist yet"
          fi

      - name: Rename Paperclip JARs
        run: |
          mv zirkonium-server/build/libs/zirkonium-paperclip-1.21.4-R0.1-SNAPSHOT-mojmap.jar ./zirkonium-1.21.4-${{ env.BUILD_NUMBER }}-mojmap.jar
          mv zirkonium-server/build/libs/zirkonium-paperclip-1.21.4-R0.1-SNAPSHOT-reobf.jar ./zirkonium-1.21.4-${{ env.BUILD_NUMBER }}-reobf.jar

      - name: Upload Zirkonium as build artifact
        uses: actions/upload-artifact@main
        with:
          name: Zirkonium 1.21.4
          path: ./zirkonium-1.21.4-*.jar

      - name: Prepare for release
        continue-on-error: true
        run: |
          chmod +x ./scripts/prepareRelease.sh
          ./scripts/prepareRelease.sh
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          GITHUB_REPO: ${{ github.repository }}

      - name: Release Zirkonium
        uses: softprops/action-gh-release@master
        with:
          name: "Zirkonium 1.21.4"
          tag_name: "ver-1.21.4"
          files: "./zirkonium-1.21.4-${{ env.BUILD_NUMBER }}.jar"
          body_path: "./release_notes.md"
          token: "${{ secrets.GITHUB_TOKEN }}"
          target_commitish: "${{ github.sha }}"
          prerelease: false