From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: Elephant1214 <46881115+Elephant1214@users.noreply.github.com>
Date: Sat, 12 Aug 2023 16:27:05 -0600
Subject: [PATCH] Add DynView update events


diff --git a/src/main/java/me/elephant1214/zirkonium/event/dynview/DynViewUpdateEvent.java b/src/main/java/me/elephant1214/zirkonium/event/dynview/DynViewUpdateEvent.java
new file mode 100644
index 0000000000000000000000000000000000000000..61bd6284afb29db923ef1481ea258959495b48d1
--- /dev/null
+++ b/src/main/java/me/elephant1214/zirkonium/event/dynview/DynViewUpdateEvent.java
@@ -0,0 +1,60 @@
+package me.elephant1214.zirkonium.event.dynview;
+
+import org.bukkit.event.Cancellable;
+import org.bukkit.event.Event;
+
+abstract sealed class DynViewUpdateEvent extends Event implements Cancellable permits SimulationDistanceUpdateEvent, ViewDistanceUpdateEvent {
+    private boolean cancelled = false;
+    private final double meanTickToStayBelow;
+    private final double meanTickTime;
+    private final int oldDistance;
+    private int newDistance;
+    private final boolean changedByCommand;
+
+    DynViewUpdateEvent(
+            final double meanTickToStayBelow,
+            final double meanTickTime,
+            final int oldDistance,
+            final int newDistance,
+            final boolean changedByCommand
+    ) {
+        this.meanTickToStayBelow = meanTickToStayBelow;
+        this.meanTickTime = meanTickTime;
+        this.oldDistance = oldDistance;
+        this.newDistance = newDistance;
+        this.changedByCommand = changedByCommand;
+    }
+
+    public double getMeanToStayBelow() {
+        return this.meanTickToStayBelow;
+    }
+
+    public double getMeanTickTime() {
+        return this.meanTickTime;
+    }
+
+    public int getOldDistance() {
+        return this.oldDistance;
+    }
+
+    public int getNewDistance() {
+        return this.newDistance;
+    }
+
+    public void setNewDistance(final int newDistance) {
+        this.newDistance = newDistance;
+    }
+    public boolean wasChangedByCommand() {
+        return this.changedByCommand;
+    }
+
+    @Override
+    public boolean isCancelled() {
+        return this.cancelled;
+    }
+
+    @Override
+    public void setCancelled(boolean cancelled) {
+        this.cancelled = cancelled;
+    }
+}
diff --git a/src/main/java/me/elephant1214/zirkonium/event/dynview/SimulationDistanceUpdateEvent.java b/src/main/java/me/elephant1214/zirkonium/event/dynview/SimulationDistanceUpdateEvent.java
new file mode 100644
index 0000000000000000000000000000000000000000..168c8e7739e7e85b8a077e58c4e7d571340b408c
--- /dev/null
+++ b/src/main/java/me/elephant1214/zirkonium/event/dynview/SimulationDistanceUpdateEvent.java
@@ -0,0 +1,27 @@
+package me.elephant1214.zirkonium.event.dynview;
+
+import org.bukkit.event.HandlerList;
+import org.jetbrains.annotations.NotNull;
+
+public non-sealed class SimulationDistanceUpdateEvent extends DynViewUpdateEvent {
+    private static final HandlerList HANDLERS = new HandlerList();
+
+    public SimulationDistanceUpdateEvent(
+            final double meanTickToStayBelow,
+            final double meanTickTime,
+            final int oldDistance,
+            final int newDistance,
+            final boolean changedByCommand
+    ) {
+        super(meanTickToStayBelow, meanTickTime, oldDistance, newDistance, changedByCommand);
+    }
+
+    @Override
+    public @NotNull HandlerList getHandlers() {
+        return HANDLERS;
+    }
+
+    public static @NotNull HandlerList getHandlerList() {
+        return HANDLERS;
+    }
+}
diff --git a/src/main/java/me/elephant1214/zirkonium/event/dynview/ViewDistanceUpdateEvent.java b/src/main/java/me/elephant1214/zirkonium/event/dynview/ViewDistanceUpdateEvent.java
new file mode 100644
index 0000000000000000000000000000000000000000..961e878d79f4951a2fd7fcbe640b56d726fb8b8a
--- /dev/null
+++ b/src/main/java/me/elephant1214/zirkonium/event/dynview/ViewDistanceUpdateEvent.java
@@ -0,0 +1,27 @@
+package me.elephant1214.zirkonium.event.dynview;
+
+import org.bukkit.event.HandlerList;
+import org.jetbrains.annotations.NotNull;
+
+public non-sealed class ViewDistanceUpdateEvent extends DynViewUpdateEvent {
+    private static final HandlerList HANDLERS = new HandlerList();
+
+    public ViewDistanceUpdateEvent(
+            final double meanTickToStayBelow,
+            final double meanTickTime,
+            final int oldDistance,
+            final int newDistance,
+            final boolean changedByCommand
+    ) {
+        super(meanTickToStayBelow, meanTickTime, oldDistance, newDistance, changedByCommand);
+    }
+
+    @Override
+    public @NotNull HandlerList getHandlers() {
+        return HANDLERS;
+    }
+
+    public static @NotNull HandlerList getHandlerList() {
+        return HANDLERS;
+    }
+}
